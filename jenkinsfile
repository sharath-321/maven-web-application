

node{

def mavenHome = tool name: "maven3.8.6"

echo "jenkins url is: ${env.JENKINS_URL}"
echo "Node Name is: ${env.NODE_NAME}"
echo "Job Name is: ${env.JOB_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), pipelineTriggers([pollSCM('* * * * *')])])

try{

stage('CheckOutCode'){
git branch: 'development', credentialsId: 'f2d9a3aa-c06c-49be-959b-35d389c7b545', url: 'https://github.com/sharath-321/maven-web-application.git'
}

stage ('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

/*

stage ('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}

stage ('UpdateArtifactIntoArtifactoryRepo'){
sh "${mavenHome}/bin/mvn clean deploy"
}

stage ('DeployAppIntoTomcatServer'){
sshagent(['fe804afb-4d56-4726-8356-38eeb0b470cd']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.35.17:/opt/apache-tomcat-9.0.65/webapps/"
}
}

*/

}//try block closed

catch (e){
skackNotifications(currentBuild.result)
throw e
}

finally {
skackNotifications(currentBuild.result)
}

}//node closed

//code snippet for sending slack notification


def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}





